(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[103],{6653:function(n,e,t){"use strict";t.r(e);var s=t(7397),a=t(1750),o=(t(7378),t(5318)),l=t(4955),r=t.n(l),i=t(7913),u=t(5979),m=(t(8579),["components"]),d=function(n){return(0,i.withSSG)(r()({filename:"index.md",route:"/classnotes/11",meta:{},pageMap:[{name:"classnote",route:"/classnote"},{name:"classnotes",children:[{name:"01",children:[{name:"index",route:"/classnotes/01"},{name:"meta.json",meta:{index:"Aula 01"}}],route:"/classnotes/01"},{name:"02",children:[{name:"index",route:"/classnotes/02"},{name:"meta.json",meta:{index:"Aula 02"}}],route:"/classnotes/02"},{name:"03",children:[{name:"index",route:"/classnotes/03"},{name:"meta.json",meta:{index:"Aula 03"}}],route:"/classnotes/03"},{name:"04",children:[{name:"index",route:"/classnotes/04"},{name:"meta.json",meta:{index:"Aula 04"}}],route:"/classnotes/04"},{name:"05",children:[{name:"index",route:"/classnotes/05"},{name:"meta.json",meta:{index:"Aula 05"}}],route:"/classnotes/05"},{name:"06",children:[{name:"index",route:"/classnotes/06"},{name:"meta.json",meta:{index:"Aula 06"}}],route:"/classnotes/06"},{name:"07",children:[{name:"index",route:"/classnotes/07"},{name:"meta.json",meta:{index:"Aula 07"}}],route:"/classnotes/07"},{name:"08",children:[{name:"index",route:"/classnotes/08"},{name:"meta.json",meta:{index:"Aula 08"}}],route:"/classnotes/08"},{name:"09",children:[{name:"index",route:"/classnotes/09"},{name:"meta.json",meta:{index:"Aula 09"}}],route:"/classnotes/09"},{name:"10",children:[{name:"index",route:"/classnotes/10"},{name:"meta.json",meta:{index:"Aula 10"}}],route:"/classnotes/10"},{name:"11",children:[{name:"index",route:"/classnotes/11"},{name:"meta.json",meta:{index:"Aula 11"}}],route:"/classnotes/11"},{name:"12",children:[{name:"index",route:"/classnotes/12"},{name:"meta.json",meta:{index:"Aula 12"}}],route:"/classnotes/12"},{name:"13",children:[{name:"index",route:"/classnotes/13"},{name:"meta.json",meta:{index:"Aula 13"}}],route:"/classnotes/13"},{name:"14",children:[{name:"index",route:"/classnotes/14"},{name:"meta.json",meta:{index:"Aula 14"}}],route:"/classnotes/14"},{name:"15",children:[{name:"index",route:"/classnotes/15"},{name:"meta.json",meta:{index:"Aula 15"}}],route:"/classnotes/15"},{name:"16",children:[{name:"index",route:"/classnotes/16"},{name:"meta.json",meta:{index:"Aula 16"}}],route:"/classnotes/16"},{name:"meta.json",meta:{10:{title:"Aula 10",type:"nav",hidden:!0},11:{title:"Aula 11",type:"nav",hidden:!0},12:{title:"Aula 12",type:"nav",hidden:!0},13:{title:"Aula 13",type:"nav",hidden:!0},14:{title:"Aula 14",type:"nav",hidden:!0},15:{title:"Aula 15",type:"nav",hidden:!0},16:{title:"Aula 16",type:"nav",hidden:!0},"01":{title:"Aula 01",type:"nav",hidden:!0},"02":{title:"Aula 02",type:"nav",hidden:!0},"03":{title:"Aula 03",type:"nav",hidden:!0},"04":{title:"Aula 04",type:"nav",hidden:!0},"05":{title:"Aula 05",type:"nav",hidden:!0},"06":{title:"Aula 06",type:"nav",hidden:!0},"07":{title:"Aula 07",type:"nav",hidden:!0},"08":{title:"Aula 08",type:"nav",hidden:!0},"09":{title:"Aula 09",type:"nav",hidden:!0}}}],route:"/classnotes"},{name:"content",route:"/content"},{name:"exams",children:[{name:"meta.json",meta:{projeto:"Projeto"}},{name:"projeto",route:"/exams/projeto"}],route:"/exams"},{name:"index",route:"/"},{name:"meta.json",meta:{index:"Disciplina",classnote:"Aulas",classnotes:{title:"Aulas",type:"nav",hidden:!0},content:"Conte\xfado",outline:{title:"Roteiro",type:"nav",hidden:!0},tools:"Ferramentas",exams:{title:"Exames",type:"nav",hidden:!0}}},{name:"tools",route:"/tools"}]},u.Z))(n)};function p(n){var e=n.components,t=(0,a.Z)(n,m);return(0,o.mdx)(d,(0,s.Z)({components:e},t),(0,o.mdx)("h1",null,"Constru\xe7\xe3o de Backend"),(0,o.mdx)("h2",null,"Chamada de Sistema"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-text",parentName:"pre"},"top - 13:40:37 up 21:04,  0 users,  load average: 0.22, 0.06, 0.02\nTasks:   3 total,   1 running,   2 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.3 us,  0.5 sy,  0.0 ni, 99.2 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem :  2039264 total,   711600 free,   272732 used,  1054932 buff/cache\nKiB Swap:  1048572 total,  1048572 free,        0 used.  1643808 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n    1 root      20   0  325052  30512  25240 S   0.0  1.5   0:00.19 node\n   15 root      20   0    4280    740    672 S   0.0  0.0   0:00.00 sh\n   16 root      20   0   40908   3056   2676 R   0.0  0.1   0:00.00 top\n")),(0,o.mdx)("p",null,"main.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const top = require('./lib');\n\n(async () => {\n  console.log(await top.raw());\n})();\n")),(0,o.mdx)("p",null,"lib.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const util = require('util');\n\nconst exec = util.promisify(require('child_process').exec);\n\nasync function raw() {\n  const { stdout } = await exec('top -n1 -b');\n\n  return stdout;\n}\n")),(0,o.mdx)("h2",null,"Manipula\xe7\xe3o de arquivo"),(0,o.mdx)("p",null,"top.log:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-text",parentName:"pre"},">>> 2020-10-27T01:46:39.716Z\ntop - 01:46:39 up  9:09,  0 users,  load average: 0.08, 0.03, 0.01\nTasks:   3 total,   1 running,   2 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.5 us,  0.6 sy,  0.0 ni, 98.8 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem :  2039264 total,   832868 free,   261920 used,   944476 buff/cache\nKiB Swap:  1048572 total,  1048572 free,        0 used.  1655240 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n    1 root      20   0  325068  30488  25036 S   0.0  1.5   0:00.37 node\n   17 root      20   0    4280    756    688 S   0.0  0.0   0:00.00 sh\n   18 root      20   0   40908   3072   2688 R   0.0  0.2   0:00.00 top\n\n>>> 2020-10-27T01:46:52.286Z\ntop - 01:46:52 up  9:09,  0 users,  load average: 0.07, 0.03, 0.00\nTasks:   3 total,   1 running,   2 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.5 us,  0.6 sy,  0.0 ni, 98.8 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem :  2039264 total,   831860 free,   262572 used,   944832 buff/cache\nKiB Swap:  1048572 total,  1048572 free,        0 used.  1654512 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n    1 root      20   0  325068  30632  25192 S   0.0  1.5   0:00.15 node\n   17 root      20   0    4280    756    688 S   0.0  0.0   0:00.00 sh\n   18 root      20   0   40908   3052   2676 R   0.0  0.1   0:00.00 top\n\n")),(0,o.mdx)("p",null,"lib.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const fs = require('fs');\nconst path = require('path');\nconst util = require('util');\n\nconst exec = util.promisify(require('child_process').exec);\n\nasync function raw() {\n  const { stdout } = await exec('top -n1 -b');\n\n  log(stdout);\n\n  return stdout;\n}\n\nasync function log(output) {\n  const logPath = path.resolve(__dirname, 'top.log');\n  let content;\n\n  try {\n    content = fs.readFileSync(logPath);\n  } catch (error) {\n    content = '';\n  }\n\n  const time = new Date().toISOString();\n\n  content = `${content}\\n>>> ${time}\\n${output}`;\n\n  fs.writeFileSync(logPath, content);\n}\n")),(0,o.mdx)("h2",null,"Express\xe3o Regular"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-json",parentName:"pre"},'{\n  "memory": {\n    "status": {\n      "total": "2039264",\n      "free": "716540",\n      "used": "270400",\n      "cache": "1052324"\n    }\n  },\n  "process": {\n    "status": {\n      "total": "3",\n      "running": "1",\n      "sleeping": "2",\n      "stopped": "0",\n      "zombie": "0"\n    },\n    "list": [\n      {\n        "pid": "1",\n        "user": "root",\n        "pr": "20",\n        "ni": "0",\n        "virt": "325052",\n        "res": "30612",\n        "shr": "25320",\n        "s": "S",\n        "cpu": "0.0",\n        "mem": "1.5",\n        "time": "0:00.21",\n        "command": "node"\n      },\n      ...\n    ]\n  }\n}\n')),(0,o.mdx)("p",null,(0,o.mdx)("a",{href:"https://regex101.com/",parentName:"p"},"regex 101"),":"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"// memory (status)\n/\\s+(?<total>\\S+) total,\\s+(?<free>\\S+) free,\\s+(?<used>\\S+) used,\\s+(?<cache>\\S+) buff/\n\n// process (status)\n/Tasks:\\s+(\\d+) total,\\s+(\\d+) running,\\s+(\\d+) sleeping,\\s+(\\d+) stopped,\\s+(\\d+) zombie/\n\n// process (list)\n/(?<pid>\\d+)\\s+(?<user>\\S+)\\s+(?<pr>\\d+)\\s+(?<ni>\\d+)\\s+(?<virt>\\d+)\\s+(?<res>\\d+)\\s+(?<shr>\\d+)\\s+(?<s>\\S+)\\s+(?<cpu>\\S+)\\s+(?<mem>\\S+)\\s+(?<time>\\S+)\\s+(?<command>\\S+)/g\n")),(0,o.mdx)("p",null,"main.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const top = require('./lib');\n\n(async () => {\n  console.log(JSON.stringify(await top.formatted(), null, 2));\n})();\n")),(0,o.mdx)("p",null,"lib.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"async function formatted() {\n  const output = await raw();\n\n  const json = {\n    memory: {\n      status: await memory(output),\n    },\n    process: {\n      status: await processStatus(output),\n      list: await processList(output),\n    },\n  };\n\n  return json;\n}\n\nasync function memory(output) {\n  const regex = /\\s+(?<total>\\S+) total,\\s+(?<free>\\S+) free,\\s+(?<used>\\S+) used,\\s+(?<cache>\\S+) buff/;\n\n  const {\n    groups: { total, free, used, cache },\n  } = output.match(regex);\n\n  return { total, free, used, cache };\n}\n\nasync function processStatus(output) {\n  const regex = /Tasks:\\s+(\\d+) total,\\s+(\\d+) running,\\s+(\\d+) sleeping,\\s+(\\d+) stopped,\\s+(\\d+) zombie/;\n\n  const [_, total, running, sleeping, stopped, zombie] = output.match(regex);\n\n  return { total, running, sleeping, stopped, zombie };\n}\n\nasync function processList(output) {\n  const list = [];\n\n  const regex = /(?<pid>\\d+)\\s+(?<user>\\S+)\\s+(?<pr>\\d+)\\s+(?<ni>\\d+)\\s+(?<virt>\\d+)\\s+(?<res>\\d+)\\s+(?<shr>\\d+)\\s+(?<s>\\S+)\\s+(?<cpu>\\S+)\\s+(?<mem>\\S+)\\s+(?<time>\\S+)\\s+(?<command>\\S+)/g;\n\n  while ((match = regex.exec(output))) {\n    const {\n      groups: { pid, user, pr, ni, virt, res, shr, s, cpu, mem, time, command },\n    } = match;\n\n    const p = { pid, user, pr, ni, virt, res, shr, s, cpu, mem, time, command };\n\n    list.push(p);\n  }\n\n  return list;\n}\n")),(0,o.mdx)("h2",null,"Pacotes do NPM"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-json",parentName:"pre"},'{\n  "memory": {\n    "status": {\n      "total": "2039264",\n      "free": "711072",\n      "used": "272752",\n      "cache": "1055440"\n    }\n  },\n  "process": {\n    "status": {\n      "total": "3",\n      "running": "1",\n      "sleeping": "2",\n      "stopped": "0",\n      "zombie": "0"\n    },\n    "list": [\n      {\n        "pid": 1,\n        "ppid": 0,\n        "uid": 0,\n        "cpu": 18,\n        "memory": 1.4,\n        "name": "node",\n        "cmd": "node main.js"\n      },\n      ...\n    ]\n  }\n}\n')),(0,o.mdx)("p",null,(0,o.mdx)("a",{href:"https://github.com/sindresorhus/ps-list",parentName:"p"},"ps-list"),":"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-bash",parentName:"pre"},"$ npm init -y\n$ npm install ps-list\n")),(0,o.mdx)("p",null,"src/lib.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const psList = require('ps-list');\n\nasync function formatted() {\n  const output = await raw();\n\n  const json = {\n    memory: {\n      status: await memory(output),\n    },\n    process: {\n      status: await processStatus(output),\n      list: await psList(),\n    },\n  };\n\n  return json;\n}\n")),(0,o.mdx)("h2",null,"Ativando Rotas"),(0,o.mdx)("p",null,(0,o.mdx)("a",{href:"https://codesandbox.io/s/top-app-vyldr?fontsize=14&hidenavigation=1&theme=dark",parentName:"p"},(0,o.mdx)("img",{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit top-app",parentName:"a"}))),(0,o.mdx)("p",null,(0,o.mdx)("img",{src:"/dw/imgs/command/top-express.png",alt:"",parentName:"p"})),(0,o.mdx)("p",null,"src/index.js:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const express = require('express');\nconst top = require('./lib');\n\nconst app = express();\nconst port = 3000;\n\napp.get('/', async (req, res) => {\n  const topOutput = await top.formatted();\n\n  res.json(topOutput);\n});\n\napp.listen(port, () => {\n  console.log(`Top App at http://localhost:${port}`);\n});\n")))}p.isMDXComponent=!0,e.default=p},330:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/classnotes/11",function(){return t(6653)}])}},function(n){n.O(0,[734,36,774,888,179],(function(){return e=330,n(n.s=e);var e}));var e=n.O();_N_E=e}]);